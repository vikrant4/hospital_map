entry('radhe extra work', 1600)
entry('drawing room tiled', 2690)
x <- data.frame(subject = names, amount = cost)
x
set.seed(123)
x <- rnorm(10, mean = 12)
x
hist(x)
?hist
hist(x, density = T)
density(x)
plot(density(x))
hist(x, freq = F)
?hist
hist(x, probability =  = T)
hist(x, probability = T)
?hist
?rnorm
pnorm(01)
dnorm(10)
qnorm(10)
?Binomial
rbinom(10)
rbinom(10, 3)
rbinom(10, 3, 0.34)
rnorm(10)
x <- seq(1, 10)
x <- x + rnorm(10)
y <- 3.2*x
lm(y~x)
y <- y + rnorm(10)
lm(y~x)
y <- 3.2*x
theta <- 0
theta*x
h.x <- theta*x
cost <- function(x, y, theta){
m = length(x)
prediction = theta*x
sqrError <- (prediction-y)^2
cost <- (1/2*m) * sum(sqrError)
cost
}
cost(x, y, theta)
v <- c(1, 2, 3, 4)
sum(v)
theta <- matrix(c(0, 0), ncol = 1)
theta
theta[,1]
theta[1,]
x <- matrix(x, nrow = 1)
x
x[1,]
theta * x
cbind(c(0), x)
x <- cbind(c(0), x)
x
theta * x
dim(theta)
dim(x)
theta ** x
theta %*% x
y <- matrix(y, ncol = 1)
y
theta*2 + y
theta[-1,]*2 + y
rm(theta, x, y, h.x)
rm(v, cost)
length(seq(10, 300, 5))
z <- rnorm(50, mean = 2, sd = 4)
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45)
)
?persp
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45)
persp(seq(10, 300, 5), seq(10, 300, 5), z=z, phi = 45, theta = 45)
z <- 2*x + y
x <- seq(10, 300, 5)
z <- 2*x + x
persp(x, x, z=z, phi = 45, theta = 45)
persp(x, x, z, phi = 45, theta = 45)
?persp
magic(5)
eye(5)
i(5)
?outer
example(presp)
?example
example(persp)
example("trans3d")
x <- seq(-20, 20, 0.01)
y <- 1/(1 + exp(-1*x))
plot(x, y)
plot(x, y, type = 'l')
abline(h = 0, col = 'red')
plot(x, y, type = 'l')
abline(v = 0, col = 'red')
abline(h = 0.5, col = 'red')
abline(h = 1, col = 'red')
abline(h = 0, col = 'red')
source('D:/Data Science/stanford machine learning/R/script.R')
library(ggplot2)
x <- data.frame(X[, 2], y)
ggplot(data = x, aes(x = x[,1], y = x[,2])) + geom_smooth()
ggplot(data = x, aes(x = x[,1], y = x[,2])) + geom_smooth() + geom_point()
ggplot(data = x, aes(x = x[,1], y = x[,2])) + geom_smooth() + geom_point()
?quinf
?qunif
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c('X', 'Prob')
temp
sum(temp[1,]*temp[2,])
temp <- 0.75*0.3
temp2 <- 0.52*0.7
temp/(temp + temp2)
temp
temp2
temp/(temp  +temp2)
*100
temp/(temp  +temp2)*100
x <- seq(-20, 20, 0.02)
y <- 1/(1 + exp(x))
plot(x, y)
y <- 1/(1 + exp(-1*x))
plot(x, y)
x <- seq(-20, 20, 0.01)
y <- 1/(1 + exp(-1*x))
plot(x, y)
plot(x, y, type = 'l')
y <- 1/exp(x)
plot(x, y)
plot(x, y, type = 'l')
y <- 1/exp(x)  + 1
plot(x, y, type = 'l')
exp(1)
exp(2)
exp(1)^2
?exp
x1 <- seq(-5, 5, 0.001)
x2 <- x1
y <- -1 + x1^2 + x2^2
contour(x1, x2, y)
contour(x1, x2, z = y)
contour(matrix(c(x1, x2), ncol =2), z = matrix(y))
?log
rm(y, x1, x2)
x <- seq(0, 1, 0.001)
y <- -1*log(x)
plot(x, y)
plot(x, y, type = 'l')
y <- -1*log(1-x)
plot(x, y, type = 'l')
?par
ar(mfcol = 2)
ar(mfcol = c(2, 1))
par(mfcol = c(2, 1))
plot(x, y, type = 'l')
y <- -1*log(x)
plot(x, y, type = 'l')
par(mfcol = c(1, 2))
plot(x, y, type = 'l')
y <- -1*log(1-x)
plot(x, y, type = 'l')
source('D:/Data Science/stanford machine learning/R/script.R')
par(mfrow = c(1, 1))
source('D:/Data Science/stanford machine learning/R/script.R')
?optim
y <- function(X){
100*X[,1] + -50*X[,2]
}
X <- matrix(c(rep(1, 20), seq(1, 10, .5)), ncol = 2)
seq(1, 10, 0.5)
length(seq(1, 10, 0.5))
X <- matrix(c(rep(1, 19), seq(1, 10, 0.5)), ncol = 2)
optim(X, y)
X
X[,1]
X[,2]
y
optim(X, y)
x <- seq(-10, 10, 0.5)
length(x)
noise <- rnorm(41)
x <- x + noise
rm(noise)
x
quantile(x)
plot(x)
x > 5
?melt
?melt
library(reshape2)
?melt
library(ggplot2)
news(version = '1.0.1', package = "ggplot2")
news(Version = '1.0.1', package = "ggplot2")
news(Version = "1.0.1", package = "ggplot2")
news(Version == "1.0.1", package = "ggplot2")
summary(galton)
galton
data(galton)
library(UsingR)
x <- seq(0, 1, 0.1)
x
length(x)
y <- rep(1, 11)
qplot(aes(x =x, y = y))
qplot(x, y)
qplot(x, y, geom = 'l')
qplot(x, y, geom = 'line')
x <- seq(-1, 2, 0.1)
x
y <- ifelse(X <= 1 & x >= 0, 1, 0)
y <- ifelse(x <= 1 & x >= 0, 1, 0)
y
qplot(x, y, geom = 'line')
x <- seq(-1, 2, 0.01)
y <- ifelse(x <= 1 & x >= 0, 1, 0)
qplot(x, y, geom = 'line')
qplot(x, y, geom = 'line', aes(size = 2))
qplot(x, y, geom = 'line', aes(size = 4))
?qplot
qplot(y)
qplot(y, binwidth = 0.5)
qplot(y, binwidth = 1)
qplot(y, binwidth = 2)
qplot(y, binwidth = 1, breaks = 1)
qplot(y, binwidth = 1, break = 1)
?qplot
rm(x, y)
t <- seq(1, 6)
y <- rep(1/6, 6)
x^2
t^2
t^2*y - (t*y)^2
sum(t^2*y - (t*y)^2)
sum(t^2*y) - sum((t*y)^2)
t^2
t^2*y
(t*y)^2
sum(t^2*y) - sum((t*y)^2)
sum(t^2*y)
sum(t*y)
sum(t^2*y) - sum(t*y)^2
qnorm(0.95, mean = 1100, sd = 75)
1100 + 75*1.645
75*2
pnorm(1160, 1020, 50)
pnorm(1160, 1020, 50, lower.tail = FALSE)
?pnorm
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75/100)
qnorm(0.95, mean = 1100, sd = 75/10)
pbinom(3, size =5, prob = 0.5, lower.tail = FALSE)
means <- cumsum(sample(0:1, 1500, replace = T))/(1:n)
means <- cumsum(sample(0:1, 1500, replace = T))/(1:1500)
plot(means)
plot(means, type = 'l')
abline(y = 0.5, col = 'red')
abline(h = 0.5, col = 'red')
means
x <- read.table('D:/Data Science/stanford machine learning/R/ex1data1.txt', sep = ',')
hist(x[,1])
head(x)
rm(x)
ppois(10, lambda = 5 * 3)
?pnorm
pnorm(13, mean = 15, sd = 1)
pnorm(16, mean = 15, sd = 1)
x <- pnorm(16, mean = 15, sd = 1)
y <- pnorm(13, mean = 15, sd = 1)
x
y
x - y
library(ggplot2)
?geocode
install.packages("ggmap")
library(ggmap)
citation("ggmap")
geocode("New Delhi")
?geocode
geocode("New Delhi, India", source = "google")
delhi <- "New Delhi, India"
?qmap
qmap(delhi, zoom = 14, source = "google")
qmap(delhi, zoom = 10, source = "google")
qmap(delhi, zoom = 10, source = "osm")
qmap("Dwarka, New Delhi", zoom = 15, source = "google")
qmap("Dwarka, New Delhi", zoom = 12, source = "google")
qmap("Dwarka, New Delhi", zoom = 14, source = "google")
?qmap
?jitter
x <- seq(1, 10)
jitter(x)
plot(jitter(x))
qplot(jitter(x))
qplot(jitter(x), binwidth = x)
qmap("Dwarka, New Delhi", zoom = 15, maptype = 58916, api_key = api_key, source = "cloudmade")
?qmap
qmap("Dwarka, New Delhi", zoom = 14, source = "google", maptype = "terrain")
qmap("Dwarka, New Delhi", zoom = 14, source = "google", maptype = "satellite")
qmap("Dwarka, New Delhi", zoom = 14, source = "google", maptype = "hybrid")
?stat_density
example("stat_density")
rm(movies)
rm(x)
rm(m)
?stat_density2d
geocode("110078")
mapdist("Dwarka, New Delhi", "Ambala, Haryana")
mapdist
distQueryCheck()
geocode("110078")
geocode("New Delhi")
geocode("New Delhi")
?geocode
geocode("New Delhi", source = "google")
geocode("110078", source = "google")
dir("C:/Users/Vikrant/Downloads")
x <- read.csv("C:/Users/Vikrant/Downloads/datafle.csv")
x <- read.csv("C:/Users/Vikrant/Downloads/datafile.csv")
x
colnames(x)
geocode(x$pincode[1], source = "google")
geocode(as.character(x$pincode[1]), source = "google")
location <- geocode(as.character(x$pincode[1]), source = "google")
revgeocode(location, source = "google")
revgeocode(location)
location
location
head(x)
colnames(x)
colnames(x)[22] <- "latitude"
colnames(x)[23] <- "longitude"
qmap("India", zoom = 5, source = "stamen", maptype = "toner")
qmap("India", zoom = 5, source = "google", maptype = "toner")
q()
hospitals <- read.csv("C:/Users/Vikrant/Downloads/datafile.csv")
colanames(hospitals)
colnames(hospitals)
colnames(hospitals)[22] <- "lattitude"
colnames(hospitals)[23] <- "longitude"
colnames(hospitals)
?filter
?select
?"subset"
x <- [1 2 3 4]
x <- c(1 2 3 4)
x <- c(1, 2, 3, 4)
x[1]
x[2]
x[-1]
x[-1, -2]
x[-1:2]
x[-(1:2)]
remove <- colnames(hospitals)[-(22:23)]
rm(remove)
library(ggmap)
ggmap("India", zoom = 5, source = "google")
map <- get_map("India", zoom = 5, source = "google", maptype = "terrain")
?"ggmap"
ggmap(map)
g <- ggplot
g <- ggplot(hospitals, aes(x = longitude, y = lattitudes)) + geom_point(aes(alpha = 0.5, color = "red"))
g <- ggplot() + geom_point(aes(x = longitude, y = lattitudes, alpha = 0.5, color = "red"))
g <- ggplot() + geom_point(aes(x = longitude, y = lattitudes, alpha = 0.5, color = "red", size = 10))
g
g <- ggplot() + geom_point(aes(x = longitude, y = lattitude, alpha = 0.5, color = "red", size = 10)) + ggmap(map)
ggmap(map, extent = "device") + geom_point(hospitals, aes(x = longitude, y = lattitudes, color = "red", alpha = 0.5))
ggmap(map, extent = "device") + geom_point(datat = hospitals, aes(x = longitude, y = lattitudes, color = "red", alpha = 0.5))
colnames(hostpitals)
colnames(hostpital)
colnames(hospitals)
ggmap(map, extent = "device") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
qgmap(map, extent = "device") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
qmap(map, extent = "device") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
qmap("India", zoom = 5, source = "googel", maptype = "terrain", extent = "device") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
qmap("India", zoom = 5, source = "googel", maptype = "terrain") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
qmap("India", zoom = 5, source = "google", maptype = "terrain") + geom_point(data = hospitals, aes(x = longitude, y = lattitude, color = "red", alpha = 0.5))
p <- qmap("India", zoom = 5, source = "google", maptype = "terrain")
p
p + geom_point(aes(x = lattitude, y = longitude, color = "red", alpha = 0.5, size = 4), data = hospitals)
colnames(hospitals)
colnames(hospitals)[22] <- "lat"
colnames(hospitals)[23] <- "lon"
p + geom_point(aes(x = lat, y = lon, color = "red", alpha = 0.5, size = 4), data = hospitals)
class(hospitals$lat)
hospitlas$lon <- numeric(hospitals$lon)
head(hospitals$lon)
hospitlas$lon <- as.numeric(hospitals$lon)
hospitals$lon <- as.numeric(hospitals$lon)
hospitals$lat <- as.numeric(hospitals$lat)
p + geom_point(aes(x = lat, y = lon, color = "red", alpha = 0.5, size = 4), data = hospitals)
summary(hospitals$lon)
summary(hospitals$lat)
p + geom_point(aes(x = lat, y = lon, color = "red", alpha = 0.5, size = 20), data = hospitals)
p + geom_point(aes(x = lat, y = lon, color = "red", size = 50), data = hospitals)
test <- which(!is.na(hospitlas$lat) & !is.na(hospitals$lon))
test <- which(!is.na(hospitals$lat) & !is.na(hospitals$lon))
test
nrow(hospitals)
test <- which(!is.na(hospitals$lat) | !is.na(hospitals$lon))
test
p + geom_point(aes(x = lat, y = lon, color = "red", size = 2), data = hospitals)
?geom_point
p + geom_point(aes(x = lat, y = lon, color = "red", size = 2), na.rm = TRUE, data = hospitals)
hospitals[1, 22:23]
x <- hospitals[1, 22:23]
p + geom_point(aes(x = x[1], y = x[2]), color = "red", size = 2)
p + geom_point(aes(x = x[1], y = x[2]), color = "red", size = 2)
p + geom_point(x[1], x[2], color = "red", size = 2)
lon <- hospitals$lon
lat <- hospitals$lat
p + geom_point(aes(x = lon, y = lat, color = "red", size = 2))
p
head(lon)
head(lat)
mean(lon)
mean(lon, na.rm = TRUE)
mean(lat, na.rm = TRUE)
plot(lat)
hist(lat)
quantile(lat)
quantile(lat, na.rm = TRUE)
hospitals[902, 22:23]
hospitals <- read.csv("C:/Users/Vikrant/Downloads/datafile.csv")
colnames(hospitlas)
colnames(hospitals)
?gsub
hospitals[,22] <- gsub("Â",".", hospitals[,22])
hospitals[,22] <- gsub("'","", hospitals[,22])
lat <- numeric(hospitals[,22])
lat <- as.numeric(hospitals[,22])
summary(lat)
hospitals[,22] <- as.numeric(hospitlas[,22])
hospitals[,22] <- as.numeric(hospitals[,22])
hospitals[,23] <- gsub("'","", hospitals[,23])
hospitals[,23] <- gsub("Â",".", hospitals[,23])
hospitals[,23] <- as.numeric(hospitals[,23])
summary(hospitals[,23])
colnames(hospitlas)
colnames(hospitals)
colnames(hospitals)[22] <- "lat"
colnames(hospitals)[23] <- "lon"
p
p + geom_point(aes(x = lon, y = lat, color = "red", alpha = 0.5), data = hospitals)
?guides
p + geom_point(aes(x = lon, y = lat, color = "red", alpha = 0.5), data = hospitals) + guides(color = FALSE)
?stat_bin2d
?stat_density2d
p + geom_point(aes(x = lon, y = lat, color = "red", alpha = 0.5), data = hospitals) + guides(color = FALSE) + geom_density2d()
p + stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), geom = "ploygon", data = hospitals, bins = 4)
p + stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), geom = "polygon", data = hospitals, bins = 4)
p + stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), geom = "polygon", data = hospitals, bins = 30)
p + stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), geom = "polygon", data = hospitals, bins = 30) + guides(color = FALSE)
p + stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), geom = "polygon", data = hospitals, bins = 50)
p + geom_point(aes(x = lon, y = lat, color = "red", alpha = 0.5, pch = 19), data = hospitals) + guides(color = FALSE)
p + geom_point(aes(x = lon, y = lat, color = "red", alpha = 0.5),pch = 19, data = hospitals) + guides(color = FALSE)
p + geom_point(aes(x = lon, y = lat, alpha = 0.5),pch = 19, data = hospitals) + guides(color = FALSE)
p + geom_point(aes(x = lon, y = lat, alpha = 0.5),pch = 19, data = hospitals) + guides(color = FALSE, alpha = FALSE)
str(hospitals$Hospital.Category)
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 19, data = hospitals) + guides(color = FALSE, alpha = FALSE)
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 19, data = hospitals) + guides(alpha = FALSE)
p <- qmap("India", zoom = 5, maptype = "toner")
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 19, data = hospitals) + guides(alpha = FALSE)
p <- qmap("India", zoom = 5, source = "google")
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 19, data = hospitals) + guides(alpha = FALSE)
p <- qmap("India", zoom = 5, source = "google", maptype = "roadmap")
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 19, data = hospitals) + guides(alpha = FALSE)
p + geom_point(aes(x = lon, y = lat, alpha = 0.5, color = Hospital.Category),pch = 'X', data = hospitals) + guides(alpha = FALSE)
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category),pch = 'X', data = hospitals) + guides(alpha = FALSE)
p <- qmap("India", zoom = 5, maptype = "toner")
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category),pch = 'X', data = hospitals)
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category, size = 4),pch = 'X', data = hospitals) + guides(size = FALSE)
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category, size = 4),pch = 19, data = hospitals) + guides(size = FALSE)
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category, size = 4, alpha = 0.6),pch = 19, data = hospitals) + guides(alpha = FALSE)
tempfile("https://data.gov.in/resources/city-wise-ambient-air-quality-year-2012/download")
x <- tempfile("https://data.gov.in/resources/city-wise-ambient-air-quality-year-2012/download")
x
unlink(x)
colnames(hospitals)
hospitals$lon <- gsub("")
t <- read.csv("https://data.gov.in/node/356921/datastore/export/csv")
head(t)
source('D:/Data Science/hospital_map/hospital_map.R')
setwd("hospital_map/")
source('D:/Data Science/hospital_map/hospital_map.R')
source('D:/Data Science/hospital_map/hospital_map.R')
dev.off()
dev.off()
dev.off()
source('D:/Data Science/hospital_map/hospital_map.R')
dev.off()
p
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category, size = 4, alpha = 0.6),
pch = 19, data = hospitals) + guides(alpha = FALSE)
View(t)
rm(hospitals, t, p)
source('D:/Data Science/hospital_map/hospital_map.R')
unlink("hospital_map.png")
source('D:/Data Science/hospital_map/hospital_map.R')
warnings()
p + geom_point(aes(x = lon, y = lat, color = Hospital.Category, size = 4, alpha = 0.6),
pch = 19, data = hospitals) + guides(alpha = FALSE)
?png
source('D:/Data Science/hospital_map/hospital_map.R')
?pdf
source('D:/Data Science/hospital_map/hospital_map.R')
source('D:/Data Science/hospital_map/hospital_map.R')
source('D:/Data Science/hospital_map/hospital_map.R')
source('D:/Data Science/hospital_map/hospital_map.R')
